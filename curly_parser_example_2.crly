class Person {
    
    var name : String
    var age = 1

    func initialize(age : String) {
        self.age = age
    }
}

//---------------

let openCurlys = 0
let openCurlysToIgnore = 0
for line in linesToParse {
    
    squishedLine = line.squish() // Removes leading and folloring whitespace
    
    if isIfStatement(squishedLine) || isForStatement(squishedLine) {
        squishedLine.removeLast(1) // Removes last character
        openCurlys++
    }

    if isClassLine(squishedLine) {
        squishedLine.removeLast(1) // Removes last character
        openCurlys++
    }

    if hasSelfRefference(squishedLine) {
        squishedLine.replaceAll("self.", "@")
    }

    if isFunctionLine(squishedLine) {
        squishedLine[0..4] = "def"
        openCurlys++
    }
    
    if squishedLine == "}" {
        if openCurlys > 0 {
            if openCurlysToIgnore == 0 {
                squishedLine == "end"
            } else {
                openCurlysToIgnore--
            }
            openCurlys--
        } else {
            // Unexpected closure
        }
    }
}

func isIfStatement(line : String): Bool {
    return line[0..2] == "if "
}

func isForStatement(line : String): Bool {
    return line[0..3] == "for "
}
